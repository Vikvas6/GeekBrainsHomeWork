# Задание-1:
# Матрицы в питоне реализуются в виде вложенных списков:
# Пример. Дано:
matrix = [[1, 0, 8],
          [3, 4, 1],
          [0, 4, 2]]
          
# Выполнить поворот (транспонирование) матрицы
# Пример. Результат:
# matrix_rotate = [[1, 3, 0],
#                  [0, 4, 4],
#                  [8, 1, 2]]

# Суть сложности hard: Решите задачу в одну строку

matrix_rotate = [[matrix[j][i] for j in range(len(matrix))] for i in range(len(matrix[0]))]

print(matrix_rotate)

# Задание-2:
# Найдите наибольшее произведение пяти последовательных цифр в 1000-значном числе.
# Выведите произведение и индекс смещения первого числа последовательных 5-ти цифр.
# Пример 1000-значного числа:
number = """
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450"""

max_mult = 0
shift = 0
number_st = number.strip().replace('\n', '')

mults = [int(number_st[i]) * int(number_st[i+1]) * int(number_st[i+2]) * int(number_st[i+3]) * int(number_st[i+4]) for i in range(len(number_st) - 4)]
print(max(mults), mults.index(max(mults)))

# for i in range(len(number_st) - 4):
#     mult = int(number_st[i]) * int(number_st[i+1]) * int(number_st[i+2]) * int(number_st[i+3]) * int(number_st[i+4])
#     if mult > max_mult:
#         max_mult = mult
#         shift = i
# print(max_mult, shift)



# Задание-3 (Ферзи):
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били
# друг друга. Вам дана расстановка 8 ферзей на доске.
# Определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел,
# каждое число от 1 до 8 — координаты 8 ферзей.
# Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.

input = [(1,2), (2,6), (3,8), (4,3), (5,1), (6,4), (7,7), (8,5)]
#input = [(1,2), (2,6), (3,8), (4,3), (5,1), (6,4), (7,7), (8,6)]

def is_beat_two(a, b):
    if a[0] == b[0] or a[1] == b[1] or a[1] - a[0] == b[1] - b[0]:
        return True
    return False

def is_unbeated(a):
    res = [i for i in input if is_beat_two(a, i) and a[0] != i[0] and a[1] != i[1]]
    if len(res) == 0:
        return True
    return False

lst = [i for i in input if is_unbeated(i)]

if len(lst) == 8:
    print('YES')
else:
    print('NO')